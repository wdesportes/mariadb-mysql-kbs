{
  "data": [
    {
      "cli": "--wsrep-auto-increment-control[={0|1}]",
      "dataType": "boolean",
      "default": "ON",
      "dynamic": true,
      "id": "wsrep_auto_increment_control",
      "name": "wsrep_auto_increment_control",
      "scope": [
        "global"
      ],
      "type": "if set to"
    },
    {
      "cli": "--wsrep-causal-reads[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_causal_reads",
      "name": "wsrep_causal_reads",
      "scope": [
        "global",
        "session"
      ],
      "type": "if set to"
    },
    {
      "cli": "--wsrep-certify-nonpk[={0|1}]",
      "dataType": "boolean",
      "default": "ON",
      "dynamic": true,
      "id": "wsrep_certify_nonpk",
      "name": "wsrep_certify_nonPK",
      "scope": [
        "global"
      ],
      "type": "when set to"
    },
    {
      "cli": "--wsrep-cluster-address=value",
      "dataType": "string",
      "dynamic": false,
      "id": "wsrep_cluster_address",
      "name": "wsrep_cluster_address",
      "scope": [
        "global"
      ],
      "type": "the addresses of cluster nodes to connect to when starting up, for example"
    },
    {
      "cli": "--wsrep-cluster-name=value",
      "dataType": "string",
      "default": "my_wsrep_cluster",
      "dynamic": true,
      "id": "wsrep_cluster_name",
      "name": "wsrep_cluster_name",
      "scope": [
        "global"
      ],
      "type": "the name of the cluster. nodes cannot connect to clusters with a different name, so needs to be identical on all nodes in the same cluster."
    },
    {
      "cli": "--wsrep-convert-lock-to-trx[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_convert_lock_to_trx",
      "name": "wsrep_convert_LOCK_to_trx",
      "scope": [
        "global"
      ],
      "type": "converts"
    },
    {
      "cli": "--wsrep-data-home-dir=value",
      "dataType": "string",
      "dynamic": false,
      "id": "wsrep_data_home_dir",
      "name": "wsrep_data_home_dir",
      "scope": [
        "global"
      ],
      "type": "directory where wsrep provider will store its internal files."
    },
    {
      "cli": "--wsrep-dbug-option=value",
      "dataType": "string",
      "dynamic": true,
      "id": "wsrep_dbug_option",
      "name": "wsrep_dbug_option",
      "scope": [
        "global"
      ],
      "type": "used to pass the dbug options to the wsrep provider."
    },
    {
      "cli": "--wsrep-debug[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_debug",
      "name": "wsrep_debug",
      "scope": [
        "global"
      ],
      "type": "when set to"
    },
    {
      "cli": "--wsrep-desync[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_desync",
      "name": "wsrep_desync",
      "scope": [
        "global"
      ],
      "type": "when set to"
    },
    {
      "cli": "--wsrep-dirty-reads[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_dirty_reads",
      "name": "wsrep_dirty_reads",
      "scope": [
        "global",
        "session"
      ],
      "type": "by default, when not synchronized with the group (",
      "validValues": [
        "ON",
        "OFF"
      ]
    },
    {
      "cli": "--wsrep-drupal-282555-workaround[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_drupal_282555_workaround",
      "name": "wsrep_drupal_282555_workaround",
      "scope": [
        "global"
      ],
      "type": "if set to"
    },
    {
      "cli": "--wsrep-forced-binlog-format=value",
      "dataType": "enum",
      "default": "NONE",
      "dynamic": true,
      "id": "wsrep_forced_binlog_format",
      "name": "wsrep_forced_binlog_format",
      "scope": [
        "global"
      ],
      "type": "a",
      "validValues": [
        "STATEMENT",
        "ROW",
        "MIXED",
        "NONE"
      ]
    },
    {
      "cli": "--wsrep-gtid-domain-id=#",
      "dataType": "numeric",
      "default": "0",
      "dynamic": true,
      "id": "wsrep_gtid_domain_id",
      "name": "wsrep_gtid_domain_id",
      "range": {
        "from": 0,
        "to": 4294967295
      },
      "scope": [
        "global"
      ],
      "type": "when"
    },
    {
      "cli": "--wsrep-gtid-mode[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_gtid_mode",
      "name": "wsrep_gtid_mode",
      "scope": [
        "global"
      ],
      "type": "automatically update the (joiner) node's"
    },
    {
      "cli": "--wsrep-load-data-splitting[={0|1}]",
      "dataType": "boolean",
      "default": "ON",
      "dynamic": true,
      "id": "wsrep_load_data_splitting",
      "name": "wsrep_load_data_splitting",
      "scope": [
        "global"
      ],
      "type": "if set to"
    },
    {
      "cli": "--wsrep-log-conflicts[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_log_conflicts",
      "name": "wsrep_log_conflicts",
      "scope": [
        "global"
      ],
      "type": "if set to"
    },
    {
      "cli": "--wsrep-max-ws-rows=#",
      "dataType": "numeric",
      "dynamic": true,
      "id": "wsrep_max_ws_rows",
      "name": "wsrep_max_ws_rows",
      "range": {
        "from": 0,
        "to": 1048576
      },
      "scope": [
        "global"
      ],
      "type": "maximum permitted number of rows per writeset. before"
    },
    {
      "cli": "--wsrep-max-ws-size=#",
      "dataType": "numeric",
      "dynamic": true,
      "id": "wsrep_max_ws_size",
      "name": "wsrep_max_ws_size",
      "range": {
        "from": 1024,
        "to": 2147483647
      },
      "scope": [
        "global"
      ],
      "type": "maximum permitted size in bytes per writeset. writesets exceeding this will be rejected. note that versions from and before"
    },
    {
      "cli": "--wsrep-mysql-replication-bundle=#",
      "dataType": "numeric",
      "default": "0",
      "dynamic": false,
      "id": "wsrep_mysql_replication_bundle",
      "name": "wsrep_mysql_replication_bundle",
      "range": {
        "from": 0,
        "to": 1000
      },
      "scope": [
        "global"
      ],
      "type": "determines the number of replication events that are grouped together.  experimental implementation aimed to assist with bottlenecks when a single slave faces a large commit time delay. if set to"
    },
    {
      "cli": "--wsrep-node-address=value",
      "dataType": "string",
      "default": "eth0",
      "dynamic": false,
      "id": "wsrep_node_address",
      "name": "wsrep_node_address",
      "scope": [
        "global"
      ],
      "type": "specifies the node's network address, in the format"
    },
    {
      "cli": "--wsrep-node-incoming-address=value",
      "dataType": "string",
      "default": "AUTO",
      "dynamic": false,
      "id": "wsrep_node_incoming_address",
      "name": "wsrep_node_incoming_address",
      "scope": [
        "global"
      ],
      "type": "this is the address from which the node listens for client connections. if an address is not specified or it's set to"
    },
    {
      "cli": "--wsrep-node-name=value",
      "dataType": "string",
      "dynamic": true,
      "id": "wsrep_node_name",
      "name": "wsrep_node_name",
      "scope": [
        "global"
      ],
      "type": "name of this node. this name can be used in"
    },
    {
      "cli": "--wsrep-notify-command=value",
      "dataType": "string",
      "dynamic": true,
      "id": "wsrep_notify_cmd",
      "name": "wsrep_notify_cmd",
      "scope": [
        "global"
      ],
      "type": "command to be executed each time the node state or the cluster membership changes. can be used for raising an alarm, configuring load balancers and so on. see the"
    },
    {
      "cli": "--wsrep-on[={0|1}]",
      "dataType": "boolean",
      "default": "ON",
      "dynamic": true,
      "id": "wsrep_on",
      "name": "wsrep_on",
      "scope": [
        "global",
        "session"
      ],
      "type": "whether or not wsrep replication is enabled. if set to",
      "validValues": [
        "ON",
        "OFF"
      ]
    },
    {
      "cli": "--wsrep-osu-method[=value]",
      "dataType": "enum",
      "default": "TOI",
      "dynamic": true,
      "id": "wsrep_osu_method",
      "name": "wsrep_OSU_method",
      "scope": [
        "global",
        "session"
      ],
      "type": "online schema upgrade method. the default is",
      "validValues": [
        "TOI",
        "RSU"
      ]
    },
    {
      "cli": "none",
      "dataType": "string",
      "dynamic": false,
      "id": "wsrep_patch_version",
      "name": "wsrep_patch_version",
      "scope": [
        "global"
      ],
      "type": "wsrep patch version, for example"
    },
    {
      "cli": "--wsrep-provider=value",
      "dataType": "string",
      "dynamic": true,
      "id": "wsrep_provider",
      "name": "wsrep_provider",
      "scope": [
        "global"
      ],
      "type": "location of the wsrep library."
    },
    {
      "cli": "--wsrep-provider-options=value",
      "dataType": "string",
      "dynamic": false,
      "id": "wsrep_provider_options",
      "name": "wsrep_provider_options",
      "scope": [
        "global"
      ],
      "type": "semicolon (;) separated list of wsrep options (see"
    },
    {
      "cli": "--wsrep-recover[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": false,
      "id": "wsrep_recover",
      "name": "wsrep_recover",
      "scope": [
        "global"
      ],
      "type": "used for recovering the global transaction id. if set to"
    },
    {
      "cli": "--wsrep-reject-queries[=value]",
      "dataType": "enum",
      "default": "NONE",
      "dynamic": true,
      "id": "wsrep_reject_queries",
      "name": "wsrep_reject_queries",
      "scope": [
        "global"
      ],
      "type": "variable to set to reject queries from client connections, useful for maintenance. the node continues to apply write-sets, but an",
      "validValues": [
        "NONE",
        "ALL",
        "ALL_KILL"
      ]
    },
    {
      "cli": "--wsrep-replicate-myisam[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_replicate_myisam",
      "name": "wsrep_replicate_myisam",
      "scope": [
        "global"
      ],
      "type": "whether or not dml updates for",
      "validValues": [
        "ON",
        "OFF"
      ]
    },
    {
      "cli": "--wsrep-restart-slave[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_restart_slave",
      "name": "wsrep_restart_slave",
      "scope": [
        "global"
      ],
      "type": "if set to on, the replication slave is restarted automatically, when node joins back to cluster."
    },
    {
      "cli": "--wsrep-retry-autocommit=value",
      "dataType": "numeric",
      "default": "1",
      "dynamic": false,
      "id": "wsrep_retry_autocommit",
      "name": "wsrep_retry_autocommit",
      "range": {
        "from": 0,
        "to": 10000
      },
      "scope": [
        "global"
      ],
      "type": "number of times autocommited queries will be retried due to cluster-wide conflicts before returning an error to the client. if set to"
    },
    {
      "cli": "--wsrep-slave-fk-checks[={0|1}]",
      "dataType": "boolean",
      "dynamic": true,
      "id": "wsrep_slave_fk_checks",
      "name": "wsrep_slave_FK_checks",
      "scope": [
        "global"
      ],
      "type": "if set to on (the default), the applier slave thread performs foreign key constraint checks."
    },
    {
      "cli": "--wsrep-slave-threads=#",
      "dataType": "numeric",
      "default": "1",
      "dynamic": true,
      "id": "wsrep_slave_threads",
      "name": "wsrep_slave_threads",
      "range": {
        "from": 1,
        "to": 512
      },
      "scope": [
        "global"
      ],
      "type": "number of threads used for applying slave writesets in parallel. galera parallel replication is only applied to transactions when safe to do so. if changed from the default ("
    },
    {
      "cli": "--wsrep-slave-uk-checks[={0|1}]",
      "dataType": "boolean",
      "dynamic": true,
      "id": "wsrep_slave_uk_checks",
      "name": "wsrep_slave_UK_checks",
      "scope": [
        "global"
      ],
      "type": "if set to on, the applier slave thread performs secondary index uniqueness checks."
    },
    {
      "cli": "--wsrep-sst-auth=value",
      "dataType": "string",
      "dynamic": true,
      "id": "wsrep_sst_auth",
      "name": "wsrep_sst_auth",
      "scope": [
        "global"
      ],
      "type": "username and password of the user to use for replication. unused if"
    },
    {
      "cli": "--wsrep-sst-donor=value",
      "dataType": "string",
      "dynamic": true,
      "id": "wsrep_sst_donor",
      "name": "wsrep_sst_donor",
      "scope": [
        "global"
      ],
      "type": "comma-separated list (from 5.5.33) or name (as per"
    },
    {
      "cli": "--wsrep-sst-donor-rejects-queries[={0|1}]",
      "dataType": "boolean",
      "default": "OFF",
      "dynamic": true,
      "id": "wsrep_sst_donor_rejects_queries",
      "name": "wsrep_sst_donor_rejects_queries",
      "scope": [
        "global"
      ],
      "type": "if set to"
    },
    {
      "cli": "--wsrep-sst-method=value",
      "dataType": "string",
      "default": "rsync",
      "dynamic": true,
      "id": "wsrep_sst_method",
      "name": "wsrep_sst_method",
      "scope": [
        "global"
      ],
      "type": "method used for taking the state snapshot transfer (sst). the command",
      "validValues": [
        "rsync",
        "mysqldump",
        "xtrabackup",
        "xtrabackup-v2",
        "mariabackup"
      ]
    },
    {
      "cli": "--wsrep-sst-receive-address=value",
      "dataType": "string",
      "default": "AUTO",
      "dynamic": true,
      "id": "wsrep_sst_receive_address",
      "name": "wsrep_sst_receive_address",
      "scope": [
        "global"
      ],
      "type": "this is the address where other nodes (donor) in the cluster connect to in order to send the state-transfer updates. if an address is not specified or its set to"
    },
    {
      "cli": "--wsrep-start-position=value",
      "dataType": "string",
      "default": " 00000000-0000-0000-0000-000000000000:-1",
      "dynamic": true,
      "id": "wsrep_start_position",
      "name": "wsrep_start_position",
      "scope": [
        "global"
      ],
      "type": "uuid sequence number."
    },
    {
      "cli": "--wsrep-sync-wait=#",
      "dataType": "numeric",
      "default": "0",
      "dynamic": true,
      "id": "wsrep_sync_wait",
      "name": "wsrep_sync_wait",
      "range": {
        "from": null
      },
      "scope": [
        "global",
        "session"
      ],
      "type": "setting this variable ensures causality checks will take place before executing an operation of the type specified by the value, ensuring that the statement is executed on a fully synced node. while the check is taking place, new queries are blocked on the node to allow the server to catch up with all updates made in the cluster up to the point where the check was begun. once reached, the original query is executed on the node. this can result in higher latency. note that when"
    }
  ],
  "name": "galera-cluster-system-variables",
  "url": "https://mariadb.com/kb/en/library/documentation/columns-storage-engines-and-plugins/storage-engines/galera-cluster/galera-cluster-system-variables/"
}
